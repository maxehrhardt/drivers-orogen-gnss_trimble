#!/usr/bin/env ruby

name "gnss_trimble"
version "0.1"

using_library "gnss_trimble"

import_types_from "base"
import_types_from "gnss_trimble/GNSSTypes.hpp"

# Declare a New task context (i.e., the component)
# in the gnss_trimble namespace.

task_context "Task" do
    needs_configuration

    #***************************
    #**** Driver Properties ****
    #***************************

    # Serial Input (NMEA) Properties:
    property('serial_port', '/std/string', "/dev/ttyUSB0").
        doc 'the device port'

    property('serial_baudrate', 'int', 38400).
        doc 'Baud rate to open the serial com_port.'

    property('serial_timeout', 'double', 1.0).
        doc 'the expected time (in seconds) to have a whole package in the fd (the device port)';



    # GNSS configurations:
    property("geodetic_datum", "std::string", "WGS84").
        doc "Geodetic datum typically NAD83 or WGS84 "

    property("utm_zone", "int", 31).
        doc "UTM zone for conversion of WGS84 to UTM"

    property("utm_north", "bool", true).
        doc "UTM north for conversion of WGS84 to UTM"

    property('gnss_source_frame', '/std/string').doc 'From Frame for the transformer'

    property('gnss_target_frame', '/std/string').doc 'To Frame for the transformer'

    property("pose_origin", "/base/Position").
        doc "Origin in UTM coordinates, that is used for position readings."

    #******************************
    #******* Output Ports *********
    #******************************

    # GNSS output port [1]:
    # Data can be written using _gnss_pose.write(value). _gnss_pose.connected() returns
    # if this output is connected to an input or not.
    output_port('pose_samples', '/base/samples/RigidBodyState').
        doc "Computed position and orientation in UTM coordinates relative to local origin."

    # GNSS output port [2]:
    # This is the raw data from the NMEA messages as reported by the BD970 receiver. 
    output_port('raw_data', '/gnss_trimble/Solution').
        doc "The GNSS/NMEA data as reported by the hardware."

    # GNSS output port [3]:
    # Time information regarding the GNSS data.
    output_port('time', '/gnss_trimble/Time').
        doc "Output the real time, cpu time and dgps processing latency."

    # GNSS output port [4]:
    # Information regarding the GNSS satellites used for position fix. 
    output_port('constellation', '/gnss_trimble/ConstellationInfo').
        doc "The status of the GNSS constellations used."

    # Component Runtime States (represent the GNSS_SOLUTION_TYPES)
    runtime_states :INVALID, :NO_SOLUTION, :AUTONOMOUS, :RTK_FLOAT, :RTK_FIXED, :DIFFERENTIAL

    # Component Error States
    error_states :IO_ERROR, :IO_TIMEOUT

    # If you want that component's updateHook() to be executed when the "command"
    # port gets data, uncomment this and comment the 'periodic' line
    # port_driven "<port_name>"
    periodic 0.1

end

